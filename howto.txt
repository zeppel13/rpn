			   ━━━━━━━━━━━━━━━━━━
			    RPN A CALCULATOR


			     Sebasian Kind
			   ━━━━━━━━━━━━━━━━━━


		       Montag, 05. September 2016


Table of Contents
─────────────────

1 Kurzübersicht aller Befehle
.. 1.1 Normale Befehle, die man auch braucht
.. 1.2 Sonderfunktionern
.. 1.3 Ergebnisse Speichern                                       :cool:
.. 1.4 Designkram
2 Achtung





1 Kurzübersicht aller Befehle
═════════════════════════════

  Es lohnt sich in den Quelltext zu schauen.


1.1 Normale Befehle, die man auch braucht
─────────────────────────────────────────

  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   Befehl   Funktion                
  ──────────────────────────────────
   [Enter]  Befehl bearbeiten       
   sw       Registertauschen(1<->2) 
   r        Regiser rollen          
   drop     Letztes Registerlöschen 
   reset    Alle Register löschen   
  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  Operatoren und Operanden werden in eine Zeile eingegeben und mit
  [Enter] abgearbeitet. Es lassen sich die Eingaben zum Erhalt der
  Übersichtlichkeit oder aus praktischen Gründen auch nacheinander
  jeweils mit Enter getrennt eingeben.

  Die Eingaben erfolgen nach dem Prinzip der Umgekehrten Polnischen
  Notation (UPN bzw in Englisch RPN) Wikipedia und YouTube helfen hier.


  3 [Enter] = 3

  3 [Enter] 5 [Enter] sw [Enter] = 3

  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   Register  Wert  Fun Facts                            
          3     0                                       
          2     0                                       
          1     5  mit sw kann man [1] und [2] tauschen 
          0     3                                       
  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  Rechenoperationen, die sich auf das erste oder die ersten Register
  beziehen.

  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   Befehl  Funktion    (Erklärung) 
  ─────────────────────────────────
   a       Addieren                
   s -     Subtrahieren            
   d /     Dividieren              
   m *     Muliplizieren           
   mod %   Rest bei Division       
   ux      Kehrwert bilden         
  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  Beispiel:

  3 5 a = 8

  7 6 m = 42

  5 ux = 0.2

  7 4 mod = 3

  (3*(4-2))

  4 2 s 3 m = 6

  (34/5)*(3-4*2)

  34 5 d 3 4 2 m s m = -34

  3+4+3+6+9

  3 4 a 3 a 6 9 = 25

  ━━━━━━━━━━━
   Konstante 
  ───────────
   e         
   pi        
  ━━━━━━━━━━━

  ━━━━━━━━━━━━━━━
   Trigonometrie 
  ───────────────
   sin           
   cos           
   tan           
   asin          
   acos          
   atan          
  ━━━━━━━━━━━━━━━

  Beispiel:

  Komm Standardkram.

  30 sin = 0.5

  0 sin = 0

  0 cos = r

  Ob die A(trig) gehen, weiß ich gerade nicht. Schau im Code nach.

  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   Logarithmen  Erklärung                    
  ───────────────────────────────────────────
   lg           Log zur Basis 10             
   ln           Log zur Bais e               
   log          log von [1] zur Basis in [2] 
  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  Beispiel:

  1024 2 log = 10

  100 lg = 2

  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   Potenzen  Erklärung                             
  ─────────────────────────────────────────────────
   p         Potenzieren    (basis[1] expont[2] p) 
   x2        Quadrieren                            
   sqrt      Quadratwurzel                         
   cbrt      Kubikwurzel                           
   xrt       Nte-Wurzel   ([1] [2] xtr)            
  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


  Beispiel:

  2 10 p = 1024

  10 2 p = 100

  16 sqrt = 4

  27 cbrt = 3

  256 4 xrt = 4


1.2 Sonderfunktionern
─────────────────────

  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   Befehl    Funktion                            
   pq        Nullstellen mit pq-Formel errechnen 
             [1] [2] pq                          
   distance  Orthodromenstrecke berechnen        
  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  3 4 pq = -1.5 in [1] und -1.5 [2]

  ━━━━━━━━━━━━━━━━━━━━
   Register  Was?     
  ────────────────────
          3  Breite_1 
          2  Länge_1  
          1  Breite_2 
          0  Länge_2  
  ━━━━━━━━━━━━━━━━━━━━

  +48 +10 +40 -89 distance = 7403 km (bis zu Joseph)


1.3 Ergebnisse Speichern                                          :cool:
────────────────────────

  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   Befehl  Funtktion, Paramenter(Freunde)      
   ->      [Zahl oder Stack] -> [Variabelname] 
   get     get [Variabelname]                  
   show    Alle Variabeln zeigen               
  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  3 -> my_var 13 -> primzahl

  3 in die Variabel my_var speichern und 13 in primzahl speichern

  get primzahl = 13

  show

  my_var : 3 primzahl : 13


  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   Befehl  Funtktion, Paramenter(Freunde)  Fun Facts                                            
   store   store [Dateiname]               Stack(Register) und Variablen in Textdatei speichern 
   run     run [Dateiname]                 Stack und Variablen aus Textdatei laden              
                                           und Rechnungen durchführen                           
   stop                                    beendet Programm                                     
  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


1.4 Designkram
──────────────

  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   Befehl  Funtktion, Paramenter(Freunde) 
   view    Toggle Stackanzeige            
   print   Stack einmalig zeigen          
   bin     Binäres (gerundetes) Ergbnis   
  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


2 Achtung
═════════

  Es kann ab und an auch etwas Schiefgehen. Die Benutzung ist frei und
  volkommen eigenverantwortlich.


